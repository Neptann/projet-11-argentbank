swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /transactions:
    get:
      tags:
        - Transactions
      summary: Transaction recovery
      description: API for GET transactions

      produces:
        - application/json
      responses:
        "200":
          description: Transaction recovery successfully
          schema:
            $ref: "#/definitions/Transaction"
        "500":
          description: Internal Server Error

    post:
      tags:
        - Transactions
      summary: Add a new transaction
      description: API for POST transaction
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/Transaction"

      responses:
        "200":
          description: Created transaction successfully
        "400":
          description: Created transaction failed
        "500":
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      tags:
        - Transactions
      summary: Retrieving a specific transaction
      description: API for GET transactions/{transactionId}
      parameters:
        - name: transactionId
          in: path
          description: retrieve transaction ID
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Transaction recovered successfully
          schema:
            $ref: "#/definitions/Transaction"
        "404":
          description: Transaction recovered failed
        "500":
          description: Internal Server Error

    put:
      tags:
        - Transactions
      summary: Update category or note
      description: API for PUT transactions/{transactionId}
      parameters:
        - name: transactionId
          in: path
          description: Update transaction ID
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CategoryNoteUpdate"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Update category or note successfully
        "400":
          description: Invalid request
        "404":
          description: Update category or note failed
        "500":
          description: Internal Server Error

    delete:
      tags:
        - Transactions
      summary: Delete complementary informations
      description: API for DELETE complementary informations of transactions/{transactionId}
      parameters:
        - name: transactionId
          in: path
          description: Update transaction ID
          required: true
          type: integer
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Informations deleted successfully
        "400":
          description: Invalid request
        "404":
          description: Informations deleted failed
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Transaction:
    type: object
    properties:
      date:
        type: string
        format: date
        example: "2023-10-18"
      description:
        type: string
        example: "Achat de fournitures de bureau"
      amount:
        type: number
        example: 50.0
      balance:
        type: number
        example: 1000.0
      transaction_type:
        type: string
        example: "Dépense"
      category:
        type: string
        example: "Bureau"
      Note:
        type: string
        example: "Facture payée avec une carte de crédit"

  CategoryNoteUpdate:
    type: object
    properties:
      category:
        type: string
        description: New category value
        example: "New category"
      note:
        type: string
        description: New note value
        example: "New note"
